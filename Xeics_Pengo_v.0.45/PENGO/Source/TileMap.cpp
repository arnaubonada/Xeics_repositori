#include "TileMap.h"

TileMap::TileMap() {

}

TileMap::~TileMap() {

}

void TileMap::level1() {

	int map[17][15] = { 
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
		{ 2,0,1,0,1,0,0,0,1,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,1,1,1,0,1,1,1,0,2 },
		{ 2,0,0,0,1,0,0,0,0,0,1,0,0,0,2 },
		{ 2,0,1,0,1,1,1,1,0,0,1,0,1,1,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,0,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,1,0,2 },
		{ 2,0,1,0,1,0,0,0,0,0,0,0,1,0,2 },
		{ 2,0,1,0,0,0,0,0,0,0,0,0,1,0,2 },
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
		
					
	};

	
}
void TileMap::LoadMap() {
	//Carregar el nivell que toqui
}

void TileMap::DrawMap() {
	int type = 0;
	for (int i = 0; i < 15; i++) {
		for (int j = 0; j < 13; j++) {
			type = _map[i][j];
		}
	}
	switch (type)
	{
	case NONE:
		//Despintar
	case BLOCK:
		//Pintar block
	case WALL:
		//Pintar wall
	case DIAMOND:
		//Pintar diamond
	default:
		break;
	}

}